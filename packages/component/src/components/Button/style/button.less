@import '../../_style/config.less';


@btn-cls: ~'@{prefix}-btn';


@btn-color-content: var(--btn-color, var(--color-base-content));

:where(.@{btn-cls}) {
  width: unset;
}

.@{btn-cls} {
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
  --btn-gap: 0.375rem;
  // --tw-prose-links: var(--btn-fg);

  cursor: pointer;
  text-align: center;
  vertical-align: middle;
  outline-offset: 2px;
  -webkit-user-select: none;
  user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);

  height: var(--size);
  font-size: var(--fontsize, 0.875rem);
  outline-color: var(--btn-color, var(--color-base-content));
  background-color: var(--btn-bg);
  background-size: auto,
    calc(var(--noise) * 100%);
  background-image: none,
    var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  touch-action: manipulation;
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset,
    var(--btn-shadow);

  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  flex-wrap: nowrap;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  gap: var(--btn-gap);
  font-weight: 600;
  transition-property: color,
    background-color,
    border-color,
    box-shadow, width;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  display: inline-flex;
  text-decoration-line: none;

  -webkit-tap-highlight-color: transparent;

  // @media (hover: hover) {
  //   &:hover {
  //     --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  //   }
  // }

  &:focus-visible,
  &:has(:focus-visible) {
    isolation: isolate;
    outline-width: 2px;
    outline-style: solid;
  }

  &:active:not(.@{btn-cls}-active, .@{btn-cls}-disabled) {
    // --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
    // --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    translate: 0 0.75px;
  }

  &:is(input[type='checkbox'], input[type='radio']) {
    appearance: none;

    &:after {
      content: attr(aria-label);
    }
  }

  &:where(input:checked:not(.filter .@{btn-cls})) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }

  :where(&) :where(svg, img) {
    width: 1em;
    height: 1em;
    fill: currentColor;
  }

  &.@{btn-cls}-loading.@{btn-cls}-loading-fixed-width:not(.@{btn-cls}-has-icon) {
    padding-inline: calc(var(--btn-p) - ((var(--btn-gap) + 1em) / 2));
  }
}

.@{btn-cls}-icon-end {
  flex-direction: row-reverse;
}

.@{btn-cls}-disabled,
.@{btn-cls}:disabled,
.@{btn-cls}[disabled] {
  // pointer-events: none;
  cursor: not-allowed;
}

.@{btn-cls}-active {
  & {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    isolation: isolate;
  }
}

.@{btn-cls}-primary {
  & {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
}

.@{btn-cls}-secondary {
  & {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
}

.@{btn-cls}-accent {
  & {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
}

.@{btn-cls}-neutral {
  --btn-color: var(--color-neutral);
  --btn-fg: var(--color-neutral-content);
}

.@{btn-cls}-info {
  & {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
}

.@{btn-cls}-success {
  & {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
}

.@{btn-cls}-warning {
  & {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
}

.@{btn-cls}-error {
  & {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
}




.@{btn-cls}-link {
  & {
    --btn-border: #0000;
    --btn-bg: #0000;
    --btn-fg: @btn-color-content;
    --btn-noise: none;
    --btn-shadow: '';
    // outline-color: currentColor;
    text-decoration-line: underline;
  }

  &:is(.@{btn-cls}-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-border: #0000;
    --btn-bg: #0000;
    text-decoration-style: wavy;
  }

  &:is(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-fg: color-mix(in oklab, @btn-color-content 20%, transparent);
  }
}

.@{btn-cls}-text {
  & {
    --btn-shadow: '';
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;

    &:not(:disabled, [disabled], .@{btn-cls}-disabled) {
      --btn-fg: @btn-color-content;

      // outline-color: currentColor;
      &:hover {
        // --btn-fg: color-mix(in oklab, var(--btn-color) 50%, var(--color-base-content) 40%);
        --btn-bg: color-mix(in oklab, @btn-color-content 7%, transparent);

        &:is(.@{btn-cls}-active, :active:focus, :focus-visible) {
          --btn-bg: color-mix(in oklab, @btn-color-content 15%, transparent);
          --btn-border: #0000;
        }
      }
    }
  }

  &:is(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-fg: color-mix(in oklab, @btn-color-content 20%, transparent);
  }

  // @media (hover: none) {
  //   &:hover:not(.@{btn-cls}-active, :active, :focus-visible, :disabled, [disabled], .@{btn-cls}-disabled) {
  //     --btn-shadow: '';
  //     --btn-bg: #0000;
  //     --btn-border: #0000;
  //     --btn-noise: none;
  //     --btn-fg: currentColor;
  //   }
  // }

}

.outline() {

  // &:not(.@{btn-cls}-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .@{btn-cls}-disabled, :checked) {
  & {
    --btn-shadow: '';
    --btn-bg: #0000;
    --btn-fg: @btn-color-content;
    --btn-border: var(--btn-fg);
    --btn-noise: none;

    &:is(.@{btn-cls}-active, :active:focus, :focus-visible, :hover):not(:disabled, [disabled], .@{btn-cls}-disabled) {
      --btn-bg: color-mix(in oklab, var(--btn-fg) 20%, transparent);
    }
  }

  &:is(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-fg: color-mix(in oklab, @btn-color-content 20%, transparent);
    --btn-border: color-mix(in oklab, @btn-color-content 20%, transparent);
    --btn-bg: #0000;
  }
}

.@{btn-cls}-outline {
  .outline()
}

.@{btn-cls}-dashed {
  .outline();

  & {
    border-style: dashed;
  }
}

.@{btn-cls}-soft {

  &:not(.@{btn-cls}-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-shadow: '';
    --btn-fg: @btn-color-content;
    --btn-bg: color-mix(in oklab, @btn-color-content 25%, var(--color-base-200));
    --btn-border: color-mix(in oklab, @btn-color-content 20%, var(--color-base-100));
    --btn-noise: none;
  }



  &:is(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-fg: color-mix(in oklab, @btn-color-content 20%, transparent);
    --btn-bg: color-mix(in oklab, @btn-color-content 8%, var(--color-base-100));
    --btn-border: var(--btn-bg);
  }

}

.@{btn-cls}-solid {
  &:is(.@{btn-cls}-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .@{btn-cls}-disabled) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  }

  &:is(:disabled, [disabled], .@{btn-cls}-disabled) {
    color: color-mix(in oklab, var(--btn-fg) 40%, var(--color-base-100));
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)) 45%, var(--color-base-100));
  }
}

.@{btn-cls}-xs {
  & {
    --fontsize: 0.6875rem;
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
}

.@{btn-cls}-sm {
  & {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
}

.@{btn-cls}-md {
  & {
    --fontsize: 0.875rem;
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
}

.@{btn-cls}-lg {
  & {
    --fontsize: 1.125rem;
    --btn-p: 1.25rem;
    --size: calc(var(--size-field, 0.25rem) * 12);
  }
}

.@{btn-cls}-xl {
  & {
    --fontsize: 1.375rem;
    --btn-p: 1.5rem;
    --size: calc(var(--size-field, 0.25rem) * 14);
  }
}

.@{btn-cls}-square {
  width: var(--size);
  height: var(--size);
  padding-inline: 0;
}

.@{btn-cls}-circle {
  width: var(--size);
  height: var(--size);
  border-radius: 100%;
  padding-inline: 0;
}

.@{btn-cls}-round {
  border-radius: var(--size);
  // padding-inline: 0;
}

// .@{btn-cls}-wide {
//   width: 100%;
//   max-width: 16rem;
// }

.@{btn-cls}-block {
  width: 100%;
}
